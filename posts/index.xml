<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on en1r0py18655555 Blog</title><link>/posts/</link><description>Recent content in Posts on en1r0py18655555 Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Oct 2024 00:04:20 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Aliyun Security Function</title><link>/posts/aliyun-security-logs/</link><pubDate>Sat, 12 Oct 2024 00:04:20 +0800</pubDate><guid>/posts/aliyun-security-logs/</guid><description> 阿里云日志梳理与使用 云日志是任何云检测和响应程序的关键组成部分。日志一直是安全运营中心的重要信息来源，但在云环境中，由于共享责任模型通常限制了组织对托管服务的访问，并且基础设施通过集中式 API 管理，日志往往是获取云环境实时可见性的唯一途径。 在阿里云环境中，管理云日志对于云安全至关重要，但理解日志以及日志之间的关系可能非常复杂。阿里云提供了多种日志服务和工具，每种日志都有独特的名称、格式和配置选项，了解需要收集哪些日志以及理解每种日志的相关用例，通常是安全团队面临的真正挑战。 此外，云上资产的可见性也是一个关键因素。通过全面的日志管理，可以实时监控和分析云上资产的状态和活动，确保及时发现和响应潜在的安全威胁。
认证、变更审计日志 日志梳理 ActionTrail 配置审计 日志监测指南 异常登录、配置行为 密码暴力破解 跨多个服务的枚举活动 异常的用户、角色、资源创建 数据存取、事件日志 日志梳理 ActionTrail Insights事件 AccessKey审计 数据管理DMS: 操作审计 RDS日志采集 日志监测指南 大量异常的数据检索、复制或删除请求 基于地理位置的异常行为 匿名用户的异常访问 数据破坏行为 网络日志 日志梳理 VPC流日志 WAF日志 云安全中心: 网络日志、安全日志类型 ALB访问日志 日志监测指南 密码暴力破解 IP、端口扫描 基于威胁情报的恶意行为发现 内部计算资源的发现 计算日志 日志梳理 云安全中心: 主机日志、安全日志类型 ECS 实例安全事件 ACK API Server审计 容器内部操作审计 巡检检查 日志监测指南 恶意文件的下载和执行 ECS、容器的命令执行 通过元数据服务获取凭证</description></item><item><title>Wiz Eks Cluster Games</title><link>/posts/wiz-eks-cluster-games/</link><pubDate>Tue, 17 Sep 2024 12:53:24 +0800</pubDate><guid>/posts/wiz-eks-cluster-games/</guid><description>Wiz Eks Cluster Games Challenge 1: Secret Seeker 题目 Jumpstart your quest by listing all the secrets in the cluster. Can you spot the flag among them?
{ &amp;#34;secrets&amp;#34;: [ &amp;#34;get&amp;#34;, &amp;#34;list&amp;#34; ] } 解题 题目给出查看全部的secrets # kubectl get secrets NAME TYPE DATA AGE log-rotate Opaque 1 320d # kubectl get secrets log-rotate -o yaml apiVersion: v1 data: flag: d2l6X2Vrc19jaGFsbGVuZ2V7b21nX292ZXJfcHJpdmlsZWdlZF9zZWNyZXRfYWNjZXNzfQ== kind: Secret metadata: creationTimestamp: &amp;#34;2023-11-01T13:02:08Z&amp;#34; name: log-rotate namespace: challenge1 resourceVersion: &amp;#34;890951&amp;#34; uid: 03f6372c-b728-4c5b-ad28-70d5af8d387c type: Opaqu # echo -n &amp;#34;d2l6X2Vrc19jaGFsbGVuZ2V7b21nX292ZXJfcHJpdmlsZWdlZF9zZWNyZXRfYWNjZXNzfQ==&amp;#34; | base64 -d wiz_eks_challenge{omg_over_privileged_secret_access} 思考 对于像 Secrets 这样的敏感资源，拥有 list 和 get 权限是非常强大的。需要谨慎管理这些权限，以保护敏感数据。 在 Kubernetes 中，访问 Secrets 应该受到严格控制。这些资源可能包含密码和令牌等关键数据，管理谁可以访问它们对于安全至关重要。 在 Kubernetes 中定期审计权限设置的必要性。这确保了访问级别始终适当，并且敏感信息得到了充分保护。 Challenge 2: Registry Hunt 题目 A thing we learned during our research: always check the container registries.</description></item><item><title>Wiz K8s Lan Party</title><link>/posts/wiz-k8s-lan-party/</link><pubDate>Tue, 03 Sep 2024 22:33:34 +0800</pubDate><guid>/posts/wiz-k8s-lan-party/</guid><description>Wiz K8s Lan Party Challenge 1: RECON 题目 As a warmup, utilize DNS scanning to uncover hidden internal services and obtain the flag. We have &amp;ldquo;loaded your machine with dnscan to ease this process for further challenges.
提示 在 Kubernetes 集群中进行侦查时，可以使用多种方法来收集信息和发现资源。以下是从DNS scanning中整理的几种主要侦查方式及其说明和使用场景：
环境变量检查 说明 环境变量通常包含集群中其他服务的 IP 地址和端口，特别是包含字符串 KUBERNETES 的变量，指向 Kubernetes API 服务。 使用场景 初步收集集群内服务的 IP 地址和端口。 获取 Kubernetes API 服务器的地址。 示例 $ env | grep KUBERNETES 文件系统检查 说明 检查 /etc/hosts 和 /etc/resolv.</description></item><item><title>Wiz Big Iam Challenge</title><link>/posts/wiz-big-iam-challenge/</link><pubDate>Sat, 31 Aug 2024 13:08:52 +0800</pubDate><guid>/posts/wiz-big-iam-challenge/</guid><description>Wiz Big Iam Challenge Challenge 1: Buckets of Fun 解题 查看View IAM Policys
{ &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Principal&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:GetObject&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::thebigiamchallenge-storage-9979f4b/*&amp;#34; }, { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Principal&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:ListBucket&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::thebigiamchallenge-storage-9979f4b&amp;#34;, &amp;#34;Condition&amp;#34;: { &amp;#34;StringLike&amp;#34;: { &amp;#34;s3:prefix&amp;#34;: &amp;#34;files/*&amp;#34; } } } ] } 这个策略包含两个声明：
第一个声明允许所有用户对存储桶 thebigiamchallenge-storage-9979f4b 中的所有对象执行 s3:GetObject 操作。 第二个声明允许所有用户对存储桶 thebigiamchallenge-storage-9979f4b 执行 s3:ListBucket 操作，但仅限于前缀为 files/ 的对象。 列出指定 S3 存储桶中的全部对象
$ aws s3api list-objects-v2 --bucket thebigiamchallenge-storage-9979f4b { &amp;#34;Contents&amp;#34;: [ { &amp;#34;Key&amp;#34;: &amp;#34;files/flag1.</description></item></channel></rss>